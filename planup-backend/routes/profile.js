const express = require("express");
const router = express.Router();
const db = require("../config/dbConfig"); // MySQL kapcsolat
const bcrypt = require("bcrypt");

// üîπ 1Ô∏è‚É£ Felhaszn√°l√≥i adatok lek√©r√©se (GET)
router.get("/:userId", async (req, res) => {
  const { userId } = req.params;

  if (!userId) {
    return res.status(400).json({ error: "UserID sz√ºks√©ges!" });
  }

  try {
    const [rows] = await db.execute("SELECT Username FROM Users WHERE UserID = ?", [userId]);

    if (rows.length === 0) {
      return res.status(404).json({ error: "Felhaszn√°l√≥ nem tal√°lhat√≥!" });
    }

    res.json({ username: rows[0].Username });
  } catch (error) {
    console.error("‚ùå Hiba a profil lek√©r√©sekor:", error);
    res.status(500).json({ error: "Szerverhiba t√∂rt√©nt." });
  }
});

// üîπ 2Ô∏è‚É£ N√©v m√≥dos√≠t√°sa (PUT)
router.put("/update-name", async (req, res) => {
  const { userId, name } = req.body;

  if (!userId || !name.trim()) {
    return res.status(400).json({ error: "UserID √©s √∫j n√©v sz√ºks√©ges!" });
  }

  try {
    await db.execute("UPDATE Users SET Username = ? WHERE UserID = ?", [name, userId]);
    res.status(200).json({ message: "‚úÖ N√©v sikeresen friss√≠tve!" });
  } catch (error) {
    console.error("‚ùå Hiba a n√©vv√°ltoztat√°skor:", error);
    res.status(500).json({ error: "Hiba t√∂rt√©nt a n√©v friss√≠t√©sekor." });
  }
});

// üîπ 3Ô∏è‚É£ Profil t√∂rl√©se (DELETE)
router.delete("/delete-profile", async (req, res) => {
  const { userId } = req.body;

  if (!userId) {
    return res.status(400).json({ error: "UserID sz√ºks√©ges!" });
  }

  try {
    await db.execute("DELETE FROM Users WHERE UserID = ?", [userId]);
    res.status(200).json({ message: "‚úÖ A profil sikeresen t√∂r√∂lve lett." });
  } catch (error) {
    console.error("‚ùå Hiba a profil t√∂rl√©sekor:", error);
    res.status(500).json({ error: "Szerverhiba t√∂rt√©nt a profil t√∂rl√©sekor." });
  }
});

module.exports = router;
